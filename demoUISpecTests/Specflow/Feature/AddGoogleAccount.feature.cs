// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace demoUISpecTests.Specflow.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "Add")]
    [Xunit.TraitAttribute("Category", "Account")]
    [Xunit.TraitAttribute("Category", "Test")]
    public partial class AddGoogleAccountFeature : Xunit.IClassFixture<AddGoogleAccountFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddGoogleAccount.feature"
#line hidden
        
        public AddGoogleAccountFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AddGoogleAccount", null, ProgrammingLanguage.CSharp, new string[] {
                        "Add",
                        "Account",
                        "Test"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(AddGoogleAccountFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.TheoryAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "AddGoogleAccount")]
        [Xunit.TraitAttribute("Description", "Add new Google account for a user")]
        [Xunit.TraitAttribute("Category", "TC#1")]
        [Xunit.InlineDataAttribute("Jon", "Poddrick", new string[0])]
        public virtual void AddNewGoogleAccountForAUser(string firstName, string lastName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC#1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add new Google account for a user", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("I have to add an account for a new user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "NewPwd",
                        "ConfirmPwd",
                        "Dob",
                        "Gender",
                        "Country",
                        "Number",
                        "RecoveryEmail",
                        "Location"});
            table1.AddRow(new string[] {
                        "jPodrrick99",
                        "Toyota@235",
                        "Toyota@235",
                        "September-23-1981",
                        "Male",
                        "Australia",
                        "0450700125",
                        "abc@gmail.com",
                        "Australia"});
#line 7
 testRunner.When(string.Format("I complete the form {0} {1}", firstName, lastName), ((string)(null)), table1, "When ");
#line 10
 testRunner.Then("the user should be on the code verification page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                AddGoogleAccountFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                AddGoogleAccountFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
